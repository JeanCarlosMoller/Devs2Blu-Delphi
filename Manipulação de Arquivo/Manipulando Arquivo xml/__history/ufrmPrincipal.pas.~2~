unit ufrmPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Xml.xmldom, Xml.XMLIntf, Xml.XMLDoc,
  Vcl.StdCtrls;

type
  TForm1 = class(TForm)
    mmLeitura: TMemo;
    btnLeitura: TButton;
    XMLDocument1: TXMLDocument;
    procedure btnLeituraClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.btnLeituraClick(Sender: TObject);
var
  xAplicacao: IXMLNode;
  xExecutaveis: IXMLNode;
  xExecutavel: IXMLNode;
  xBibliotecas: IXMLNode;
  xBiblioteca: IXMLNode;
  xVersao: IXMLNode;
  xDescricao: IXMLNode;
  xInfNo: IXMLNodeList;
  i: Integer;
begin
  mmLeitura.Clear;

  //Ativa o XMLDocument para podemos ler as informações do xml
  XMLDocument1.Active := true;

  //Busca o nó principal do xml
  xAplicacao := XMLDocument1.DocumentElement;

  //Busca o nó onde está a lista de executáveis
  xExecutaveis := xAplicacao.ChildNodes.FindNode('executaveis');

  //Busca o nó onde está a lista de bibliotecas
  xBibliotecas := xAplicacao.ChildNodes.FindNode('bibliotecas');

  mmLeitura.Lines.Add('[XECUTAVEIS]');
  mmLeitura.Lines.Add('');

  //Percorre todos os executáveis da lista
  for i := 0 to xExecutaveis.ChildNodes.Count -1 do
  begin
    xExecutavel := xExecutaveis.ChildNodes[i];

    //recupera os atributos do nó executavel
    xInfNo := xExecutavel.AttributeNodes;
  end;



end;

end.
